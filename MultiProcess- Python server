#!/usr/bin/python 

'''
1. Create socket with socket.socket function
2. Bind socket to address+port with socket.bind function
3. Put the socket in listening mode with socket.listen function
3. Accept connection with socket.accept function
'''

import socket
import threading
import multiprocessing


host = ''
port = 8888


def ser(ip,port):
	
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	print 'Socket created'
	s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,1) 
	try:
	    s.bind((host, port))
	except socket.error as msg:
	    print 'Bind failed. Error Code : ' + str(msg[0]) + ' Message ' + msg[1]
	    sys.exit()
     
	print 'Socket bind complete'
	#Start listening on socket
	s.listen(10)
	print 'Socket now listening'
	return s

def han(client,address):
	print 'waiting for client'
	print("Received connection from: {}:{}".format(*address))

	while True:
		data = client.recv(2048)
		if data:
			print data
			client.send(data)
	
		else:
			print ("Closing connection...")
			client.close()
			return 

 
s= ser('0.0.0.0',8080)
jobs = []
#now keep talking with the client
while 1:
    #wait to accept a connection - blocking call
	conn, addr = s.accept()
	p = multiprocessing.Process(target=han, args=(conn,addr))
	jobs.append(p)
	p.start()
